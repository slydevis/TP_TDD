<?xml version="1.0" encoding="UTF-8"?><testrun name="TestRoman" project="RomanDecoder" tests="18" started="18" failures="1" errors="0" ignored="0">
  <testsuite name="Roman.TestRoman" time="0.004">
    <testcase name="testCD" classname="Roman.TestRoman" time="0.001"/>
    <testcase name="testDD" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testII" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testIV" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testIX" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testLL" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testLX" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testXC" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testXL" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testCCCLXIX" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testCDXLVIII" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testC" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testD" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testI" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testL" classname="Roman.TestRoman" time="0.0"/>
    <testcase name="testM" classname="Roman.TestRoman" time="0.002">
      <failure>java.lang.AssertionError: expected:&lt;1000&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at org.junit.Assert.assertEquals(Assert.java:542)&#13;
	at Roman.TestRoman.testM(TestRoman.java:138)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testV" classname="Roman.TestRoman" time="0.001"/>
    <testcase name="testX" classname="Roman.TestRoman" time="0.0"/>
  </testsuite>
</testrun>
